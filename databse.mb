Users:
1. student
2. teacher
3. managing director
4. operator
5. Head Teacher

common:
1. can see his/her profile,
2. edit, update profile
3. see notifications

student:
1. common
2. see result

teacher:
1. common
2. publish results

Managing director, Head Teacher:
1. common
2. See all classes result
3. Post Job

Tables:
1. Users
2. Profile
3. Schools
4. School Addresses
5. Images
6. Result
7. Notifications
8. Classes

Useres:

id   first_name     last_name   role    mobile     gender_id   religion_id

branches:
id      istitute_id     name

addresses: //institute id for student
id addressable_id      addressable_type(user, institute, branches)     village_id   post_office_id     local_guardian(boolean, default-false)    permanent(boolean, default-true)      deleted_at

contacts:
id      contactable_id      contactable_type(user, institute, branches)    name(mobile, telepone, email, website)      value(unique)   deleted_at 

pinpoint_addresses:
id      pointable_id     pointable_type(user, institue, branches)  block      road_no      house_no        house_name      floor   


student_info:
id      user_id     class_id     father_name      mother_name     guardian_mobile     relation   local_guardian(boolean)

local_guardian:
id      user_id     guardian_name   guardian_mobile     relation


classes:
id      name    

user_class:
user_id     class_id 


































Relationships
Student:
student belongs to a school
student belongs to a class
school has many classes
class morphToMany students

school has many teachers
school belongs to a head teacher
school bolongs to a managing director
school has a address

school morphToMany ProfileImages
school morphToMany CoverPhotos
school morphToMany GallaryImages
school morphpToMany Videos
school morphToMany Teachers

Student:
name, class, roll_no, profile_pic, blood_group, phone_no, section, 


// $division = new Division;
    // $division->name = "Barisal";
    // $division->slug = "barisal";    
    // $division->save();

    // $district = new District;
    // $district->name = "Jhalokati";
    // $district->slug = "jhalokati";
    // $district->division()->associate(1);    
    // $district->save();

    // $data = new Upazila;
    // $data->name = "Kathalia";
    // $data->slug = "kathalia";
    // $data->district()->associate(1);    
    // $data->save();

    // $data = new PostOffice;
    // $data->name = "Amua";
    // $data->slug = "amua";
    // $data->code = '8431';
    // $data->upazila()->associate(1);    
    // $data->save();

    // $data = new Village;
    // $data->name = "Banshbunia";
    // $data->slug = "banshbunia";
    // $data->post_office()->associate(1);
    // $data->upazila()->associate(1);
    // $data->save();

    // $data = new InstituteType;
    // $data->name = "Primary";
    // $data->slug = "primary";
    // $data->save();

    // $data = new InstituteType;
    // $data->name = "College";
    // $data->slug = "college";
    // $data->save();

    // $data = new InstituteFor;
    // $data->name = "Girls";
    // $data->slug = "girls";
    // $data->save();

    // $data = new OwnerType;
    // $data->name = "Private";
    // $data->slug = "private";
    // $data->save();

    // $data = new InstituteFor;
    // $data->name = "Boys";
    // $data->slug = "boys";
    // $data->save();

    // $data = new OwnerType;
    // $data->name = "Half Govment";
    // $data->slug = "half-govment";
    // $data->save();

    // $upazila = Upazila::find(1);
    // //dd($upazila->villages);

    // $data = new Institute;
    // $data->name = "31st Boisnober Hawla Gov Primary School";
    // $data->slug = "31st-no-boisnober-hawla-gov-primay-school";
    // $data->institute_type()->associate(2);
    // $data->institute_for()->associate(1);
    // $data->owner_type()->associate(2);
    // $data->village()->associate(1);
    // $data->code = '4567';
    // $data->location = 'location2';
    // $data->save();

    // $type = InstituteType::find(1);   
    // $for = InstituteFor::find(1);
    // $institutes  = $for->institutes;
    // dump($institutes[0]->name);
    // $village =$institutes[0]->village;
    // dump($village->name);
    // $upazila = $village->upazila;
    // dump($upazila->name);
    // $district = $upazila->district;
    // dump($district->name);

    // $Institute = Institute::with(['institute_type', 'institute_for', 'owner_type', 'village','village.upazila','village.upazila.district'])->find(1);
    // dd($Institute);



    Reteriving Polymorpic Realation

        $institute = Institute::find(1);
    $avatures = $institute->avaters;

   $a = $avatures->firstWhere('type', 'logo');
   if($a)
   {
    return $a->src;
   }

    $filtered = $avatures->filter(function ($value, $key) {
    return $value->type === 'background';
});
    //dd($filtered );
    $backgrounds =  $institute->avaters->where('type', 'background')->first();
    dd($backgrounds);
    
    foreach ($backgrounds as $avater) {
            //dump($avater->imageable);
            dump($avater->src);
    }











